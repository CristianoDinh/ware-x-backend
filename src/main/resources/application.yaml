server:
  port: 8082
  servlet:
    context-path: /ware-x
  ## handling all the reverse proxies
  forward-headers-strategy: FRAMEWORK

spring:
  application:
    name: warehouse-optimization
  datasource:
    url: "jdbc:postgresql://localhost:5432/ware_x"
    username: postgres
    password: 5432
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update   # Or validate, create-drop, none
    show-sql: true #show sql in logs
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
  #keycloack:
  security:
    oauth2:
      client:
        provider:
          external:
            issuer-uri: http://localhost:8080/realms/external
        registration:
          external:
            provider: external
            client-name: external-client
            client-id: external-client
            client-secret: KEDpti92UGccNxQTdwI1yLd04OMnLF3x
            scope:
              - openid
              - offline_access
              - profile
            authorization-grant-type: authorization_code
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/external
          jwk-set-uri: http://localhost:8080/realms/external/protocol/openid-connect/certs
## logging
logging:
  level:
    org.springframework.security: INFO
  pattern:
    console: "%d{dd-MM-yyyy HH:mm:ss} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
